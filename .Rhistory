renv::restore()
renv::restore()
renv::restore()
renv::restore()
install.packages(c("bslib", "callr", "data.table", "datawizard", "dbplyr", "effectsize", "emmeans", "ggeffects", "htmltools", "insight", "knitr", "lattice", "lme4", "munsell", "parameters", "performance", "pkgbuild", "rstudioapi", "xfun"))
install.packages(c("bslib", "callr", "data.table", "datawizard", "dbplyr", "effectsize", "emmeans", "ggeffects", "htmltools", "insight", "knitr", "lattice", "lme4", "munsell", "parameters", "performance", "pkgbuild", "rstudioapi", "xfun"))
install.packages(c("bslib", "callr", "data.table", "datawizard", "dbplyr", "effectsize", "emmeans", "ggeffects", "htmltools", "insight", "knitr", "lattice", "lme4", "munsell", "parameters", "performance", "pkgbuild", "rstudioapi", "xfun"))
install.packages("see")
install.packages("patchwork")
#| code-fold: true
library(tidyverse)
set.seed(1030)
xsquared <- function(x) {
x ^ 2
}
# Generate xy data
sim_data <- function(xsquared, sample_size = 100) {
x = runif(n = sample_size, min = 0, max = 1)
y = rnorm(n = sample_size, mean = xsquared(x), sd = 0.05)
data.frame(x, y)
}
# Generate predicted data (model)
df = sim_data(xsquared, sample_size = 60)
fit_1 <- lm(y ~ 1, data = df)
fit_2 <- lm(y ~ poly(x, degree = 1), data = df)
fit_3 <- lm(y ~ poly(x, degree = 2), data = df)
fit_many <- lm(y ~ poly(x, degree = 20), data = df)
truth <- seq(from = 0, to = 1, by = 0.01)
# Combine the data and model fits into a single data frame
df <- data.frame(
x = df$x,
y = df$y,
fit_1 = predict(fit_1),
fit_2 = predict(fit_2),
fit_3 = predict(fit_3),
fit_many = predict(fit_many)
)
renv::snapshot()
renv::snapshot()
